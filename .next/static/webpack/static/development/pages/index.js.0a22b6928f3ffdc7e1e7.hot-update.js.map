{"version":3,"file":"static/webpack/static/development/pages/index.js.0a22b6928f3ffdc7e1e7.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import WithNavbar from '../layouts/WithNavbar'\nimport Header from '../components/Head'\nimport Alert from '../components/Alert'\n\nimport React from 'react'\nimport consola from 'consola'\nimport _ from 'lodash'\nimport Router from 'next/router'\n\nimport { forecast } from '../helpers/request'\n\nimport favorite from '../store/favorite'\n\nclass Index extends React.Component {\n\n constructor(props){\n  super(props);\n  this.state = {\n\n      loading: false,\n      city: 'Bandung', // default bandung\n      forecast: {\n          \"location\": {\n              \"name\": \"Bandung\",\n              \"region\": \"West Java\",\n              \"country\": \"Indonesia\",\n              \"lat\": -7.44,\n              \"lon\": 111.46,\n              \"tz_id\": \"Asia/Jakarta\",\n              \"localtime_epoch\": 1561443045,\n              \"localtime\": \"2019-06-25 13:10\"\n          },\n          \"current\": {\n              \"last_updated_epoch\": 1561442078,\n              \"last_updated\": \"2019-06-25 12:54\",\n              \"temp_c\": 30.7,\n              \"temp_f\": 87.3,\n              \"is_day\": 1,\n              \"condition\": {\n                  \"text\": \"Sunny\",\n                  \"icon\": \"//cdn.apixu.com/weather/64x64/day/113.png\",\n                  \"code\": 1000\n              },\n              \"wind_mph\": 2.9,\n              \"wind_kph\": 4.7,\n              \"wind_degree\": 177,\n              \"wind_dir\": \"S\",\n              \"pressure_mb\": 1014,\n              \"pressure_in\": 30.4,\n              \"precip_mm\": 0,\n              \"precip_in\": 0,\n              \"humidity\": 55,\n              \"cloud\": 0,\n              \"feelslike_c\": 33.6,\n              \"feelslike_f\": 92.5,\n              \"vis_km\": 10,\n              \"vis_miles\": 6,\n              \"uv\": 8,\n              \"gust_mph\": 3.4,\n              \"gust_kph\": 5.4\n          },\n          \"forecast\": {\n              \"forecastday\": [\n                  {\n                      \"date\": \"2019-06-25\",\n                      \"date_epoch\": 1561420800,\n                      \"day\": {\n                          \"maxtemp_c\": 35,\n                          \"maxtemp_f\": 95,\n                          \"mintemp_c\": 22.5,\n                          \"mintemp_f\": 72.5,\n                          \"avgtemp_c\": 27.7,\n                          \"avgtemp_f\": 81.9,\n                          \"maxwind_mph\": 6.7,\n                          \"maxwind_kph\": 10.8,\n                          \"totalprecip_mm\": 0,\n                          \"totalprecip_in\": 0,\n                          \"avgvis_km\": 10,\n                          \"avgvis_miles\": 6,\n                          \"avghumidity\": 70,\n                          \"condition\": {\n                              \"text\": \"Partly cloudy\",\n                              \"icon\": \"//cdn.apixu.com/weather/64x64/day/116.png\",\n                              \"code\": 1003\n                          },\n                          \"uv\": 10\n                      },\n                      \"astro\": {\n                          \"sunrise\": \"05:46 AM\",\n                          \"sunset\": \"05:28 PM\",\n                          \"moonrise\": \"11:54 PM\",\n                          \"moonset\": \"11:36 AM\"\n                      }\n                  }\n              ]\n          }\n      },\n      favorite: [],\n      error: null\n  };\n\n  this.addToFavorite = this.addToFavorite.bind(this)\n\n }\n\n componentDidMount() {\n     consola.info('query', this.props.url)\n }\n\n    getForecast = async (e) => {\n     e.preventDefault();\n     consola.info('your city', this.state.city);\n\n     this.setState({loading: true});\n\n     const getForecast = await forecast({\n         method: 'GET',\n         params: {\n             q: this.state.city\n         }\n     });\n\n     this.setState({forecast: getForecast.data, loading: false})\n };\n\n changeCity = (e) => {\n\n     this.setState({city: e.target.value, error: null})\n };\n\n addToFavorite = async (city) => {\n\n     const find = await _.find(favorite.store.getState(), {city});\n     if (find) {\n         consola.info(`${city} has been added to favorite`);\n         this.setState({error: `${city} has been added to favorite`})\n     } else {\n         await favorite.store.dispatch(favorite.action.addToFavorite(city));\n         consola.info('current favorite', favorite.store.getState())\n     }\n };\n\n render(){\n     const ErrorMessage = () => {\n         if (this.state.error) {\n             return (\n                 <div className=\"mt-3\">\n                     <small className=\"text-red-500\">{this.state.error}</small>\n                 </div>\n             )\n         } else {\n             return (\n                 <small className=\"text-red-500\"></small>\n             )\n         }\n     };\n  return(\n   <div className=\"container mx-auto\">\n       <Header title=\"Search city\"/>\n\n       <form className=\"flex\" onSubmit={this.getForecast.bind(this)}>\n           <div className=\"flex-auto w-3/4\">\n               <input onChange={this.changeCity.bind(this)} type=\"text\" className=\"bg-white border border-gray-300 rounded py-2 px-4 block w-full appearance-none leading-normal\" placeholder=\"Type city name, example: Bandung\" />\n           </div>\n           <div className=\"flex-auto w-1/4 px-1 \">\n               <button  type=\"submit\" className=\"w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n                   { this.state.loading ? 'Loading...' : 'Get forecast' }\n               </button>\n           </div>\n       </form>\n\n       <div className=\"bg-white rounded-lg\">\n\n           <div className=\"flex\">\n\n                   <div className=\"text-center w-full\">\n                       <h1 className=\"text-6xl align-middle\">{this.state.forecast.location.name}</h1>\n                       <div className=\"text-4xl\"><span className=\"text-gray-600\">{this.state.forecast.current.temp_c} &deg;</span></div>\n                   </div>\n\n\n           </div>\n\n           <div className=\"flex mt-3\">\n               <div className=\"w-1/2 \">\n                   <img className=\"float-right align-middle\" src={this.state.forecast.current.condition.icon} alt=\"icon.png\"/>\n               </div>\n               <div className=\"w-1/2 py-5 \">\n                   <span className=\"align-middle\">{this.state.forecast.current.condition.text}</span>\n               </div>\n           </div>\n\n           <div className=\"flex\">\n               <div className=\"w-full text-center\">\n                   <button onClick={() => this.addToFavorite(this.state.forecast.location.name)} type=\"button\" className=\"px-2 py-2 rounded focus:outline-none hover:bg-green-600 border border-green-500 bg-green-500 text-white\">Add to favorite</button>\n                   <ErrorMessage />\n               </div>\n           </div>\n\n\n           <div className=\"flex mt-6\">\n               <div className=\"w-1/4  h-12  text-center\">\n                   <p>Wind</p>\n                   <div>\n                       {this.state.forecast.current.wind_mph} mph\n                   </div>\n               </div>\n               <div className=\"w-1/4  h-12  text-center\">\n                   <p>Pressure</p>\n                   <div>\n                       {this.state.forecast.current.pressure_in} bar\n                   </div>\n               </div>\n               <div className=\"w-1/4  h-12  text-center\">\n                   <p>Humidity</p>\n                   <div>\n                       {this.state.forecast.current.humidity} %\n                   </div>\n               </div>\n               <div className=\"w-1/4  h-12  text-center\">\n                   <p>Feels like</p>\n                   <div>\n                       {this.state.forecast.current.feelslike_c} &deg;\n                   </div>\n               </div>\n           </div>\n       </div>\n\n\n\n\n   </div>\n  )\n }\n}\n\nexport default Router(props => (\n    <WithNavbar>\n        <Index />\n    </WithNavbar>\n))"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8FA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAOA;AACA;AACA;AADA;AAFA;AACA;AAPA;AAMA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA/FA;AAAA;AAAA;AAAA;AACA;AADA;AAgHA;AAAA;AAAA;AAAA;AACA;AACA;AAlHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAHA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAQA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AApHA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA6BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAnBA;AAqBA;AACA;AACA;AACA;AACA;AAJA;AAxBA;AAFA;AAxCA;AA4EA;AACA;AAjFA;AAoFA;AAtFA;AAwFA;AACA;;;AACA;AACA;AACA;;;AAmsourceRoot":""}